/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a BranchConfigurationWithId.
 * @extends models['BranchConfiguration']
 */
class BranchConfigurationWithId extends models['BranchConfiguration'] {
  /**
   * Create a BranchConfigurationWithId.
   * @property {number} id
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of BranchConfigurationWithId
   *
   * @returns {object} metadata of BranchConfigurationWithId
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'BranchConfigurationWithId',
      type: {
        name: 'Composite',
        className: 'BranchConfigurationWithId',
        modelProperties: {
          trigger: {
            required: false,
            serializedName: 'trigger',
            type: {
              name: 'String'
            }
          },
          testsEnabled: {
            required: false,
            serializedName: 'testsEnabled',
            type: {
              name: 'Boolean'
            }
          },
          badgeIsEnabled: {
            required: false,
            serializedName: 'badgeIsEnabled',
            type: {
              name: 'Boolean'
            }
          },
          signed: {
            required: false,
            serializedName: 'signed',
            type: {
              name: 'Boolean'
            }
          },
          cloneFromBranch: {
            required: false,
            serializedName: 'cloneFromBranch',
            type: {
              name: 'String'
            }
          },
          toolsets: {
            required: false,
            serializedName: 'toolsets',
            type: {
              name: 'Composite',
              className: 'BranchConfigurationToolsets'
            }
          },
          artifactVersioning: {
            required: false,
            serializedName: 'artifactVersioning',
            type: {
              name: 'Composite',
              className: 'BranchConfigurationArtifactVersioning'
            }
          },
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = BranchConfigurationWithId;
